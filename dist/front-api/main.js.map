{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/graphql.users.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/graphql.products.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GraphqlUsersService } from '../graphql.users.service';\n//import { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: string = \"\";\n  pass: string = \"\";\n  email: string = \"test@test.com\";\n  token: string = \"\";\n  isSuperuser: boolean = false;\n\n  constructor(private graphqlUsersService: GraphqlUsersService) { }\n\n  ngOnInit(): void {\n  }\n\nregisterUser() {\n    //console.table([this.user, this.email, this.pass, this.isSuperuser]);\n\n      this.graphqlUsersService.createUser(this.user, this.email, this.pass, this.isSuperuser)\n    .subscribe(({ data }) => {\n       console.log('registered: ', JSON.stringify(data));\n       //this.token =  JSON.parse(JSON.stringify(data)).tokenAuth.token;\n       //localStorage.setItem('token', this.token);\n       this.loginUser();\n\n    }, (error) => {\n       console.log('there was an error sending the query', error);\n    });\n} \n\nloginUser() {\n    this.graphqlUsersService.tokenAuth(this.user, this.pass)\n    .subscribe(({ data }) => {\n       console.log('logged: ', JSON.stringify(data));\n       this.token =  JSON.parse(JSON.stringify(data)).tokenAuth.token;\n       localStorage.setItem('token', this.token);\n       if(this.token)window.open('http://localhost:4200/dashboard','_self');\n    }, (error) => {\n       console.log('there was an error sending the query', error);\n    });\n  \n  } \n\n\n}\n","<section class=\"vh-100 gradient-custom\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n          <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem;\">\n            <div class=\"card-body p-5 text-center\">\n  \n              <div class=\"mb-md-5 mt-md-4 pb-5\">\n  \n                <h2 class=\"fw-bold mb-2 text-uppercase\">Register</h2>\n                <p class=\"text-white-50 mb-5\">Please enter your email and password</p>\n  \n                <div class=\"form-outline form-white mb-4\">\n                    <!-- <label class=\"form-label\" for=\"typeEmailX\">Email</label> -->\n                  <input type=\"text\" id=\"typeEmailX\" class=\"form-control form-control-lg\" placeholder=\"username\" [(ngModel)]= \"user\">\n                </div>\n  \n                <div class=\"form-outline form-white mb-4\">\n                    <!-- <label class=\"form-label\" for=\"typePasswordX\">Password</label> -->\n                  <input type=\"password\" id=\"typePasswordX\" class=\"form-control form-control-lg\" placeholder=\"Password\" [(ngModel)]= \"pass\">\n                </div>\n  \n                <br>\n                <button class=\"btn btn-outline-light btn-lg px-5\" type=\"submit\" (click)=\"registerUser()\">Register</button>\n  \n              </div>\n  \n              <div>\n                <p class=\"mb-0\">Already have an account? <a routerLink=\"/login\" class=\"text-white-50 fw-bold\">Login</a></p>\n              </div>\n\n              <br>\n              <div>\n                <p class=\"mb-0\"><a routerLink=\"/\" class=\"text-white-50 fw-bold\">Home</a></p>\n              </div>\n  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'http://34.125.235.58:8081/graphql/'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<main class=\"main\" id=\"top\">\n    <nav class=\"navbar navbar-light sticky-top\" data-navbar-darken-on-scroll=\"900\">\n        <div class=\"container pt-2\"><a class=\"navbar-brand\" routerLink=\"/\"> <img src=\"assets/img/gallery/logo.png\" alt=\"...\" style=\"width: 156px; height: 48px;\"/></a>\n            <div class=\"navbar-nav ms-auto\" style=\"margin-right: 15px;\">\n                <button class=\"btn btn-secondary\" routerLink=\"/login\">Login</button>\n            </div>\n            <div>\n                <button class=\"btn btn-secondary\" routerLink=\"/register\">Register</button>\n            </div>\n        </div>\n    </nav>\n\n    <section class=\"mt-6\">\n        <div class=\"container\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-9 col-lg-8 col-xl-5\">\n                    <h1 class=\"display-3 lh-sm\">Raspid made for you!</h1>\n                </div>\n                <div class=\"col-md-9 col-xl-5\">\n                    <p class=\"fs-2\">Never lose track of your sensors and environment</p>\n                    <button class=\"btn btn-primary mt-3\" routerLink=\"/login\">Get started</button>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"bg-secondary\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-xl-3 text-center text-xl-start\"><a href=\"#!\"><img class=\"footer-img me-xl-5 me-3\"\n                            src=\"assets/img/gallery/facebook-line1.svg\" alt=\"fb\"\n                            style=\"width:20px;height:20px;\" /></a><a href=\"#!\"><img class=\"footer-img me-xl-5 me-3\"\n                            src=\"assets/img/gallery/linkedin-line1.svg\" alt=\"in\"\n                            style=\"width:20px;height:20px;\" /></a><a href=\"#!\"><img class=\"footer-img me-xl-5 me-3\"\n                            src=\"assets/img/gallery/twitter-line1.svg\" alt=\"twitter\"\n                            style=\"width:20px;height:20px;\" /></a><a href=\"#!\"><img class=\"footer-img me-xl-5 me-3\"\n                            src=\"assets/img/gallery/instagram-line1.svg\" alt=\"instragram\"\n                            style=\"width:20px;height:20px;\" /></a>\n                </div>\n                    <div class=\"col-xl-4 pt-2 pt-xl-0\">\n                    </div>\n                <div class=\"col-xl-5 pt-2 pt-xl-0 text-center text-xl-end\">\n                    <p class=\"mb-0\"> Source code at <a class=\"text-300\" href=\"https://github.com/AleOD/Front_API\"\n                            target=\"_blank\"> Github </a></p>\n                </div>\n            </div>\n        </div>\n    </section>\n\n</main>","import { Component, OnInit } from '@angular/core';\nimport { GraphqlProductsService } from '../graphql.products.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  private querySubscription: Subscription;\n\n  temp = [];\n  logData = []; //logs \n  sensors = {};\n  slider: string = \"\";\n  token: string = localStorage.getItem('token');\n\n\n  blurEvent(event: any){    \n    if(event.target.name == 'LED'){\n      console.log('LED',event.target.name, event.target.checked);\n      this.setActuator(event.target.name, event.target.checked ? '1' : '0');\n    }else{\n      console.log('MOTOR',event.target.name, event.target.value);\n      this.setActuator(event.target.name, event.target.value);\n    }\n    //this.getComponents();\n  }\n\n  checkToken() {\n    if (!localStorage.getItem('token')) {\n      window.open('http://localhost:4200/','_self');\n    }\n  }\n\n  refresh(){\n    window.open('http://localhost:4200/dashboard','_self');\n  }\n\n  constructor(private graphqlProductsService: GraphqlProductsService ) { }\n\n  ngOnInit(): void {\n    this.checkToken();\n    this.getComponents();\n    this.getLogs();\n  }\n  \n  logout(){\n    localStorage.clear();\n    window.open('http://localhost:4200/','_self');\n  }\n\n  getComponents(){\n    this.querySubscription = this.graphqlProductsService.Components(\"-\")\n    .valueChanges\n    .subscribe(({ data }) => {\n      let c = JSON.parse(JSON.stringify(data));\n      c.components.shift();\n      console.log('DATA FROM API: ', c.components);\n      this.temp=c.components;\n      this.sensors=this.sortSensors(this.temp);\n    })\n  }\n\n  setActuator(name:string, value:string) {  \n    this.graphqlProductsService.updateComponent(this.token,name,value)\n    .subscribe(({ data }) => {\n      let c = JSON.parse(JSON.stringify(data)).updateComponent.component.value;\n       console.log('actuatorValue: ', (c));\n       if(name === 'DC-Motor' ) this.sensors[4] = c;\n    }, (error) => {\n       console.log('there was an error sending the query', error);\n    });\n  } \n\n  sortSensors(sensors:any) {\n    return [\n      // Ultrasonic sensor\n      sensors.filter((sensor) => sensor.name === \"Ultrasonic sensor\")[0].value.slice(0,5),\n      // DHT11 - Temperature\n      sensors.filter((sensor) => sensor.name === \"DHT11-temperature\")[0].value,\n      // DHT11 - Humidity\n      sensors.filter((sensor) => sensor.name === \"DHT11-humidity\")[0].value,\n      // LDR\n      sensors.filter((sensor) => sensor.name === \"LDR\")[0].value,\n      // DC-Motor\n      sensors.filter((sensor) => sensor.name === \"DC-Motor\")[0].value,\n      // LED\n      sensors.filter((sensor) => sensor.name === \"LED\")[0].value \n    ]\n  }\n\n  getLogs(){\n    this.querySubscription = this.graphqlProductsService.Logs()\n    .valueChanges\n    .subscribe(({ data }) => {\n    let l = JSON.parse(JSON.stringify(data));\n    //console.log('LOGS FROM API: ', l.logs);\n    this.logData = this.sortLogs(l.logs);\n    console.log('LOGS FROM API: ', this.logData);\n    localStorage.setItem('temperature', JSON.stringify(this.logData[0]));\n    localStorage.setItem('humidity', JSON.stringify(this.logData[1]));\n    })\n  }\n  sortLogs(logs:any) {\n  return [\n    // DHT11 - Temperature\n    this.sortIndividualLogs(logs.filter((sensor) => sensor.name === \"DHT11-temperature\")),\n    // DHT11 - Humidity\n    this.sortIndividualLogs(logs.filter((sensor) => sensor.name === \"DHT11-humidity\"))\n    // DC-Motor\n    //logs.filter((sensor) => sensor.name === \"DC-Motor\"),\n    // LED\n    //logs.filter((sensor) => sensor.name === \"LED\") \n\n    ]\n  }\n\n  sortIndividualLogs(logs:any) {\n    let time1, time2, tmp1, tmp2, stop1, stop2, date_ref1, date_ref2;\n    return logs.sort((a, b) => {\n        stop1 = a.created.split('T');\n        stop2 = b.created.split('T');\n        \n        tmp1 = stop1[0].split('-');\n        tmp2 = stop2[0].split('-');\n        \n        time1 = stop1[1].split('.')[0].split(':');\n        time2 = stop2[1].split('.')[0].split(':');\n\n        date_ref1 = parseInt(`${time1[0]}${time1[1]}${time1[2]}`);\n        date_ref2 = parseInt(`${time2[0]}${time2[1]}${time2[2]}`);\n        \n        return date_ref1 - date_ref2;\n    });\n}\n}\n","<div class=\"darkmode\">\n    <div class=\"layer\"></div>\n  <!-- ! Body -->\n  <a class=\"skip-link sr-only\" href=\"#skip-target\">Skip to content</a>\n  <div class=\"page-flex\">\n    <div class=\"main-wrapper\">\n      \n      <!-- ! Main nav -->\n      <nav class=\"main-nav--bg\">\n    <div class=\"container main-nav\">\n      <div class=\"main-nav-start\">\n      </div>\n      <div class=\"main-nav-end\">\n        <h6 (click)=\"logout()\" style=\"cursor:pointer;\">Logout</h6>\n        <h6 (click)=\"refresh()\" style=\"cursor:pointer;\">Refresh</h6>\n        <div class=\"nav-user-wrapper\">\n          <button href=\"##\" class=\"nav-user-btn dropdownDashboard-btn\" title=\"My profile\" type=\"button\">\n            <span class=\"sr-only\">My profile</span>\n          </button>\n          <ul class=\"users-item-dropdownDashboard nav-user-dropdownDashboard dropdownDashboard\">\n            <li><a class=\"danger\" href=\"##\">\n                <i data-feather=\"log-out\" aria-hidden=\"true\"></i>\n                <span>Log out</span>\n              </a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </nav>\n      <!-- ! Main -->\n      <main class=\"main users chart-page\" id=\"skip-target\">\n        <div class=\"container\">\n          <h2 class=\"main-title\">Dashboard</h2>\n          <div class=\"row stat-cards\">\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon primary\">\n                  <img src=\"../assets/img/icons/icons-measure-71.png\" alt=\"Ultrasonic\">\n\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">{{sensors[0]}} cm</p>\n                  <p class=\"stat-cards-info__title\">Ultrasónico</p>\n                </div>\n              </article>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon warning\">\n                  <i data-feather=\"thermometer\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">{{sensors[1]}} °C</p>\n                  <p class=\"stat-cards-info__title\">Temperatura</p>\n                </div>\n              </article>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon purple\">\n                  <i data-feather=\"droplet\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">{{sensors[2]}} %</p>\n                  <p class=\"stat-cards-info__title\">Húmedad</p>\n                </div>\n              </article>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon success\">\n                  <i data-feather=\"sun\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">{{sensors[3]==='0' ? 'OFF':'ON'}}</p>\n                  <p class=\"stat-cards-info__title\">Luminosity</p>\n                </div>\n              </article>\n            </div>\n\n            <div class=\"col-md-6 col-xl-3\">\n            </div>\n\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon success\">\n                    <img src=\"../assets/img/icons/icons8-led-70.png\" alt=\"LED\">\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">LED</p>\n                  <label class=\"switch mt-2\">\n                    <input type=\"checkbox\" name=\"LED\" [checked]=\"sensors[5] == '1' ? true : false\"\n                    (blur)=\"blurEvent($event)\">\n                    <span class=\"slider-btn round\"></span>\n                  </label>\n                </div>\n              </article>\n            </div>\n\n\n            <div class=\"col-md-6 col-xl-3\">\n              <article class=\"stat-cards-item\">\n                <div class=\"stat-cards-icon success\">\n                  <img src=\"../assets/img/icons/robot.png\" alt=\"Servo\">\n                </div>\n                <div class=\"stat-cards-info\">\n                  <p class=\"stat-cards-info__num\">DC Motor </p>\n                  <div class=\"slidecontainer\">\n                    <input type=\"range\" min=\"0\" max=\"100\" value=\"{{sensors[4]}}\" class=\"slider\" id=\"actuator-slider\" name=\"DC-Motor\" (blur)=\"blurEvent($event)\"\n                    >\n                    <h3 style=\"color:white\">{{sensors[4]}} pwm</h3>\n                  </div>\n                </div>\n              </article>\n            </div>\n\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <div class=\"chart\">\n                <canvas id=\"myChart\" aria-label=\"Site statistics\" role=\"img\"></canvas>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n  \n      <!-- ! Footer -->\n      <footer class=\"footer\">\n    <div class=\"container footer--flex\">\n      <div class=\"footer-start\">\n        <p>2021 - Graspy - Source code at <a href=\"https://github.com/AleOD/Front_API\" target=\"_blank\"\n            rel=\"noopener noreferrer\">Github</a></p>\n      </div>\n      <ul class=\"footer-end\">\n        <li><a href=\"##\">About</a></li>\n        <li><a href=\"##\">Support</a></li>\n        <li><a href=\"##\">Puchase</a></li>\n      </ul>\n    </div>\n  </footer>\n    </div>\n  </div>\n</div>","import {Injectable} from '@angular/core';\nimport {Apollo, gql} from 'apollo-angular';\n\nconst TOKENAUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nconst CREATEUSER = gql`\n  mutation CreateUser($username: String!, $password: String!, $email: String!, $isSuperUser:Boolean!) {\n    createUser(username: $username, password: $password, email: $email, isSuperUser: $isSuperUser) {\n      user{ \n        id\n        username\n        email\n        isSuperuser\n      }\n    }\n  }\n  `;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GraphqlUsersService {\n  constructor(private apollo: Apollo) {}\n\n  tokenAuth(username: string, password: string) {\n \n    return this.apollo.mutate({\n      mutation: TOKENAUTH,\n      variables: {\n        username: username,\n        password: password\n      }\n    });\n  \n    }\n\n  createUser(username: string, email: string, password: string, isSuperuser: boolean) {\n      return this.apollo.mutate({\n        mutation: CREATEUSER,\n        variables: {\n          username: username,\n          email: email,\n          password: password,\n          isSuperUser: Boolean(isSuperuser)\n        }\n      });\n  }\n   \n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-api';\n}\n","\n\n<!-- <ul>\n  <li><a routerLink=\"login\">Login</a></li>\n  <li><a routerLink=\"\">Landing Page</a></li>\n</ul> -->\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { GraphQLModule } from './graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    LoginComponent,\n    RegisterComponent,\n    // DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    GraphQLModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {Apollo, gql} from 'apollo-angular';\nimport { Subscription } from 'rxjs';\n//import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n//import { StorageService } from \"./storage.service\";\n\nconst TOKENAUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nconst COMPONENTS = gql`\n  query Components {\n    components {\n      name \n      value\n      cType\n      unit\n    }\n  }\n`;\n\nconst LOGS = gql`\nquery Logs{\n    logs {\n      name \n      value\n      created\n    }\n  }\n`;\n\nconst COMPONENTSPARAM = gql`\n  query Components($name:String!, $cType:String!, $value:String!,$unit:String!) {\n    components(name:$name, cType:$cType, value:$value, unit:$unit) {\n      id\n      name \n      value\n      cType\n      unit\n      owner {\n        id\n        username\n        email\n      }\n    }\n  }\n`;\n\n\n\n\n\nconst CREATECOMPONENT = gql`\n  mutation CreateComponent($name:String!, $cType:String!, $value:String!,$unit:String!) {\n    createComponent(name:$name, cType:$cType, value:$value, unit:$unit) {\n      id\n      name\n      value\n      unit\n      owner {\n        id\n      }\n   }\n  }\n  `;\n\nconst UPDATECOMPONENT = gql`\n  mutation UpdateComponent($name:String!, $value:String!) {\n    updateComponent(name:$name, value:$value) {\n      component {\n        id\n        name\n        value\n    }\n  }\n  }\n  `;\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GraphqlProductsService  {\n\n  loading: boolean;\n  posts: any;\n  private querySubscription: Subscription;\n\n  constructor(private apollo: Apollo) {}\n\n  Components(valor : string) {\n    //alert(valor);\n    if (valor==\"-\")\n    {\n      return this.apollo.watchQuery({\n        query: COMPONENTS \n      });\n    }\n    else\n    {\n      //alert(valor);\n      return this.apollo.watchQuery({\n        query: COMPONENTSPARAM,\n        variables: {\n          nombre: valor\n        }, \n      });\n    }\n}\n \n createComponent(mytoken: string, name: string, value: string, cType: string, unit: string) {\n       console.log(\"token auth = \" + mytoken);\n      return this.apollo.mutate({\n        mutation: CREATECOMPONENT,\n        variables: {\n          name: name,\n          value: value,\n          cType: cType,\n          unit: unit\n        },\n        context: {\n          // example of setting the headers with context per operation\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\n        },\n\n      }); \n  }\n \n updateComponent(mytoken: string, name: string, value: string) {\n       console.log(\"token auth = \" + mytoken);\n      return this.apollo.mutate({\n        mutation: UPDATECOMPONENT,\n        variables: {\n          name: name,\n          value: value\n        },\n        context: {\n          // example of setting the headers with context per operation\n          headers: new HttpHeaders().set('Authorization', 'JWT ' + mytoken),\n        },\n\n      }); \n  }  \n\n\n  Logs() {\n    return this.apollo.watchQuery({\n      query: LOGS \n    });\n    \n\n}\n\n\n\n   \n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { GraphqlUsersService } from '../graphql.users.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  user: string = \"\";\n  pass: string = \"\";\n  token: string = \"\";\n  constructor(private graphqlUsersService: GraphqlUsersService) { }\n\n  ngOnInit(): void {\n  }\n\n\n\nloginUser() {\n    this.graphqlUsersService.tokenAuth(this.user, this.pass)\n    .subscribe(({ data }) => {\n       console.log('logged: ', JSON.stringify(data));\n       this.token =  JSON.parse(JSON.stringify(data)).tokenAuth.token;\n       localStorage.setItem('token', this.token);\n       if(this.token)window.open('http://localhost:4200/dashboard','_self');\n    }, (error) => {\n       console.log('there was an error sending the query', error);\n    });\n  \n  }  \n}\n\n\n","<section class=\"vh-100 gradient-custom\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n          <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem;\">\n            <div class=\"card-body p-5 text-center\">\n  \n              <div class=\"mb-md-5 mt-md-4 pb-5\">\n  \n                <h2 class=\"fw-bold mb-2 text-uppercase\">Login</h2>\n                <p class=\"text-white-50 mb-5\">Please enter your login and password!</p>\n  \n                <div class=\"form-outline form-white mb-4\">\n                    <!-- <label class=\"form-label\" for=\"typeEmailX\">Email</label> -->\n                  <input type=\"text\" id=\"typeEmailX\" class=\"form-control form-control-lg\" placeholder=\"Username\" [(ngModel)]= \"user\">\n                </div>\n  \n                <div class=\"form-outline form-white mb-4\">\n                    <!-- <label class=\"form-label\" for=\"typePasswordX\">Password</label> -->\n                  <input type=\"password\" id=\"typePasswordX\" class=\"form-control form-control-lg\" placeholder=\"Password\" [(ngModel)]= \"pass\">\n                </div>\n  \n                <p class=\"small mb-5 pb-lg-2\"><a class=\"text-white-50\" href=\"#!\">Forgot password?</a></p>\n  \n                <button class=\"btn btn-outline-light btn-lg px-5\" type=\"submit\" (click)=\"loginUser()\">Login</button>\n  \n              </div>\n  \n              <div>\n                <p class=\"mb-0\" >Don't have an account? <a routerLink=\"/register\" class=\"text-white-50 fw-bold\" >Sign Up</a></p>\n              </div>\n\n              <br>\n              <div>\n                <p class=\"mb-0\"><a routerLink=\"/\" class=\"text-white-50 fw-bold\">Home</a></p>\n              </div>\n  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}